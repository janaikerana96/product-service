generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
  relationMode = "prisma"
}

model Product {
  id          Int    @id  @default(autoincrement())
  name        String
  description String?   @db.LongText
  image       String
  sku         String
  inventory   Int
  category    Category? @relation(fields: [categoryId], references: [id])
  categoryId  Int?
  price       Price?    @relation(fields: [priceId], references: [id])
  priceId     Int?
  brand       Brand?    @relation(fields: [brandId], references: [id])
  brandId     Int?
  createAt    DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Category {
  id          Int   @id @default(autoincrement())
  name        String
  description String?   @db.LongText
  slug        String
  subcategory String
  Product     Product[]
  createAt    DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Price {
  id         Int    @id @default(autoincrement())
  priceValue Int
  currency   Currency? @relation(fields: [currencyId], references: [id])
  currencyId Int?
  cupom      Cupom?    @relation(fields: [cupomId], references: [id])
  cupomId    Int?
  Product    Product[]
  createAt   DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
}

model Brand {
  id          Int    @id @default(autoincrement())
  name        String
  description String?   @db.LongText
  Product     Product[]
}

model Catalog {
  id          Int   @id  @default(autoincrement())
  name        String
  description String?  @db.LongText
  createAt    DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Currency {
  id       Int  @id @default(autoincrement())
  name     String
  currencyValue String
  Price    Price[]
}

model Cupom {
  id              Int      @id @default(autoincrement())
  name            String
  discont_value   Int
  status          status_cupom @default(Inactive)
  date_validation DateTime     @db.Date
  Price           Price[]
  createAt        DateTime     @default(now())
  updatedAt       DateTime     @updatedAt
}

enum status_cupom {
  Active
  Inactive
}
